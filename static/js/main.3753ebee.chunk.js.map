{"version":3,"sources":["components/ColorPanel/ColorPanel.jsx","firebase.js","components/SidePanel/UserPanel.jsx","components/SidePanel/Channels.jsx","components/SidePanel/SidePanel.jsx","components/Messages/Messages.jsx","components/MetaPanel/MetaPanel.jsx","components/App.js","serviceWorker.js","components/Auth/Register.js","components/Auth/Login.js","Spinner.js","reducers/index.js","actions/types.js","store.js","index.js","actions/index.js"],"names":["ColorPanel","react_default","a","createElement","Component","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","UserPanel","state","user","_this","props","currentUser","dropdownOptions","key","text","displayName","disabled","onClick","handleSignOut","auth","signOut","then","console","log","this","Fragment","Grid","style","background","Column","Row","padding","margin","Header","inverted","floated","as","Icon","name","Dropdown","trigger","Image","src","photoURL","spaced","avatar","options","Channels","channels","modal","channelName","channelDetails","channelRef","database","ref","openModal","e","setState","closeModal","handleChange","Object","defineProperty","target","value","handleSubmit","preventDefault","isFromValid","addChannel","_this$state","push","newChannel","id","detail","createdBy","child","update","catch","err","error","_ref","_this$state2","Menu","Item","length","Modal","basic","open","onClose","Content","Form","onSubmit","Field","Input","fluid","label","onChange","Actions","Button","color","SidePanel","size","fixed","vertical","fontSize","SidePanel_UserPanel","Channels_Channels","Messages","MetaPanel","connect","columns","className","ColorPanel_ColorPanel","SidePanel_SidePanel","marginLeft","Messages_Messages","width","MetaPanel_MetaPanel","Boolean","window","location","hostname","match","Register","username","email","password","passwordConfirmation","errors","loading","usersRef","isFormEmpty","message","concat","isPasswordValid","_ref2","displayErrors","map","i","handleInputError","inputName","some","toLowerCase","includes","createUserWithEmailAndPassword","res","updateProfile","md5","saveUser","uid","set","textAlign","verticalAlign","maxWidth","icon","Segment","stacked","type","iconPosition","placeholder","Message","Link","to","Login","isFormValid","signInWithEmailAndPassword","Spinner","Dimmer","active","Loader","content","initialState","isLoading","rootReducer","combineReducers","arguments","undefined","action","payload","objectSpread","store","createStore","composeWithDevTools","Root","onAuthStateChanged","setUser","history","clearUser","Switch","Route","exact","path","component","App","React","RootWithAuth","withRouter","ReactDOM","render","es","BrowserRouter","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3753ebee.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nexport default class ColorPanel extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>ColorPanel</h1>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import firebase from 'firebase/app'\r\nimport 'firebase/auth'\r\nimport 'firebase/database'\r\nimport 'firebase/storage'\r\n\r\n\r\nvar config = {\r\n    apiKey: \"AIzaSyAeBPFZ_aJ62vpV4ooN_hMG2hw7jMcxwmI\",\r\n    authDomain: \"slack-clone-app.firebaseapp.com\",\r\n    databaseURL: \"https://slack-clone-app.firebaseio.com\",\r\n    projectId: \"slack-clone-app\",\r\n    storageBucket: \"slack-clone-app.appspot.com\",\r\n    messagingSenderId: \"508869347276\"\r\n  };\r\n  firebase.initializeApp(config);\r\nexport default firebase;","import React, { Component } from \"react\";\r\nimport { Grid, Header, Icon, Dropdown, Image } from \"semantic-ui-react\";\r\nimport firebase from \"../../firebase\";\r\nclass UserPanel extends Component {\r\n  state = {\r\n    user: this.props.currentUser\r\n  };\r\n\r\n  dropdownOptions = () => [\r\n    {\r\n      key: \"user\",\r\n      text: (\r\n        <span>\r\n          Signed as <strong>{this.state.user.displayName}</strong>\r\n        </span>\r\n      ),\r\n      disabled: true\r\n    },\r\n    {\r\n      key: \"avatar\",\r\n      text: <span>Change Avatar</span>\r\n    },\r\n    {\r\n      key: \"signout\",\r\n      text: <span onClick={this.handleSignOut}>Sign Out</span>\r\n    }\r\n  ];\r\n  handleSignOut = () => {\r\n    firebase\r\n      .auth()\r\n      .signOut()\r\n      .then(() => console.log(\"Signed Out!\"));\r\n  };\r\n  render() {\r\n    const { user } = this.state;\r\n    return (\r\n      <React.Fragment>\r\n        <Grid style={{ background: \"#4c3c4c\" }}>\r\n          <Grid.Column>\r\n            <Grid.Row style={{ padding: \"1.2em\", margin: 0 }}>\r\n              {/*AppLication Heder*/}\r\n              <Header inverted floated=\"left\" as=\"h2\">\r\n                <Icon name=\"code\" />\r\n                Chat\r\n              </Header>\r\n              {/** User Dropdown */}\r\n              <Header as=\"h4\" style={{ padding: \"0.25em\" }} inverted>\r\n                <Dropdown\r\n                  trigger={\r\n                    <span>\r\n                      <Image src={user.photoURL} spaced=\"right\" avatar />\r\n                      {user.displayName}\r\n                    </span>\r\n                  }\r\n                  options={this.dropdownOptions()}\r\n                />\r\n              </Header>\r\n            </Grid.Row>\r\n          </Grid.Column>\r\n        </Grid>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserPanel;\r\n","import React, { Component } from \"react\";\r\nimport { Menu, Icon, Modal, Form, Input, Button } from \"semantic-ui-react\";\r\nimport firebase from \"../../firebase\";\r\n\r\nexport default class Channels extends Component {\r\n  state = {\r\n    user: this.props.currentUser,\r\n    channels: [],\r\n    modal: false,\r\n    channelName: \"\",\r\n    channelDetails: \"\",\r\n    channelRef: firebase.database().ref(\"channels\")\r\n  };\r\n  openModal = e => {\r\n    this.setState({\r\n      modal: true\r\n    });\r\n  };\r\n  closeModal = e => {\r\n    this.setState({\r\n      modal: !this.state.modal\r\n    });\r\n  };\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    if (this.isFromValid(this.state)) {\r\n      this.addChannel();\r\n    }\r\n  };\r\n  // Add\r\n  addChannel = () => {\r\n    const { channelRef, channelName, channelDetails, user } = this.state;\r\n    const key = channelRef.push().key;\r\n\r\n    const newChannel = {\r\n      id: key,\r\n      name: channelName,\r\n      detail: channelDetails,\r\n      createdBy: {\r\n        name: user.displayName,\r\n        avatar: user.photoURL\r\n      }\r\n    };\r\n\r\n    channelRef\r\n      .child(key)\r\n      .update(newChannel)\r\n      .then(() => {\r\n        this.setState({\r\n          channelName: \"\",\r\n          channelDetails: \"\"\r\n        });\r\n        this.closeModal();\r\n        console.log(\"channel added\");\r\n      })\r\n      .catch(err => {\r\n        console.error(err);\r\n      });\r\n  };\r\n  // Validation\r\n  isFromValid = ({ channelName, channelDetails }) =>\r\n    channelName && channelDetails;\r\n  render() {\r\n    const { channels, modal } = this.state;\r\n    return (\r\n      <React.Fragment>\r\n        <Menu.Menu style={{ padding: \"2em 0\" }}>\r\n          <Menu.Item>\r\n            <span>\r\n              <Icon name=\"exchange\" />\r\n              Channels\r\n            </span>{\" \"}\r\n            ({channels.length}) <Icon name=\"add\" onClick={this.openModal} />\r\n          </Menu.Item>\r\n        </Menu.Menu>\r\n        <Modal basic open={modal} onClose={this.closeModal}>\r\n          <Modal.Header>Add a Channel</Modal.Header>\r\n          <Modal.Content>\r\n            <Form onSubmit={this.handleSubmit}>\r\n              <Form.Field>\r\n                <Input\r\n                  fluid\r\n                  label=\"Name of Channel\"\r\n                  name=\"channelName\"\r\n                  onChange={this.handleChange}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <Input\r\n                  fluid\r\n                  label=\"Details of Channel\"\r\n                  name=\"channelDetails\"\r\n                  onChange={this.handleChange}\r\n                />\r\n              </Form.Field>\r\n            </Form>\r\n          </Modal.Content>\r\n          <Modal.Actions>\r\n            <Button color=\"green\" inverted onClick={this.handleSubmit}>\r\n              <Icon name=\"checkmark\" /> Add\r\n            </Button>\r\n            <Button color=\"red\" inverted onClick={this.closeModal}>\r\n              <Icon name=\"remove\" /> Cancel\r\n            </Button>\r\n          </Modal.Actions>\r\n        </Modal>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Menu } from \"semantic-ui-react\";\r\nimport UserPanel from \"./UserPanel\";\r\nimport Channels from \"./Channels\";\r\nexport default class SidePanel extends Component {\r\n  render() {\r\n    const { currentUser } = this.props;\r\n    return (\r\n      <React.Fragment>\r\n        <Menu\r\n          size=\"large\"\r\n          inverted\r\n          fixed=\"left\"\r\n          vertical\r\n          style={{ background: \"#4c3c4c\", fontSize: \"1.2rem\" }}\r\n        >\r\n          <UserPanel currentUser={currentUser} />\r\n          <Channels currentUser={currentUser} />\r\n        </Menu>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class Messages extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Message</h1>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class MetaPanel extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>MetaPanel</h1>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react'\nimport './App.css';\nimport {Grid} from 'semantic-ui-react';\nimport {connect} from 'react-redux';\n//Components\nimport ColorPanel from './ColorPanel/ColorPanel';\nimport SidePanel from './SidePanel/SidePanel';\nimport Messages from './Messages/Messages';\nimport MetaPanel from './MetaPanel/MetaPanel';\n\n function App({currentUser}) {\n  return (\n    <React.Fragment>\n      <Grid columns=\"equal\" className=\"app\" style={{background:'#eee'}}>\n        <ColorPanel></ColorPanel>\n        <SidePanel currentUser={currentUser} ></SidePanel>\n        <Grid.Column style={{marginLeft:320}}>\n           <Messages></Messages>\n        </Grid.Column>\n        <Grid.Column width={4}>\n          <MetaPanel></MetaPanel>\n        </Grid.Column>\n      </Grid>\n    </React.Fragment>\n  )\n}\nconst mapStateToProps = state =>({\n  currentUser:state.user.currentUser \n})\nexport default connect(mapStateToProps)(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from 'react'\r\nimport {Grid,Form,Segment,Button,Header,Message,Icon} from 'semantic-ui-react'\r\nimport {Link} from 'react-router-dom'\r\nimport firebase from '../../firebase'\r\nimport md5 from 'md5'\r\n\r\n\r\nclass Register extends Component {\r\n     state={\r\n         username:'',\r\n         email:'',\r\n         password:'',\r\n         passwordConfirmation:'',\r\n         errors:[],\r\n         loading:false,\r\n         usersRef:firebase.database().ref('users')\r\n     }\r\n\r\n     handleChange=(e)=>{\r\n      this.setState({\r\n          [e.target.name] :e.target.value\r\n      }) \r\n    }\r\n    isFromValid = () =>{\r\n        let errors= [];\r\n        let error;\r\n        if(this.isFormEmpty(this.state)){\r\n            // Error\r\n            error = {message:'Fill in all fields'};\r\n            this.setState({\r\n                errors: errors.concat(error)\r\n            });\r\n            return false;\r\n        }else if(!this.isPasswordValid(this.state)){\r\n            // Error\r\n            error = {message:'Password invalid'};\r\n            this.setState({\r\n                errors: errors.concat(error)\r\n            });\r\n            return false;\r\n        }else{\r\n            // From is Valid\r\n            return true;\r\n        }\r\n    }\r\n    isFormEmpty=({username,email,password,passwordConfirmation}) =>{\r\n        return !username.length || !email.length || !password.length|| !passwordConfirmation.length;\r\n    }\r\n    isPasswordValid=({password,passwordConfirmation}) =>{\r\n        if(password.length<6|| passwordConfirmation.length <6){\r\n            return false;\r\n        }else if( password !== passwordConfirmation){\r\n            return false;\r\n        }else{\r\n            return true;\r\n        }\r\n    }\r\n    displayErrors = errors => errors.map((error,i)=><p key={i}>{error.message}</p>);\r\n    handleInputError = (errors,inputName)=>{\r\n      return   errors.some(error=>error.message.toLowerCase().includes(inputName))? 'error':''\r\n    }\r\n    handleSubmit = (e)=>{\r\n        e.preventDefault();\r\n        if(this.isFromValid()){\r\n            this.setState({errors:[],loading:true});\r\n            firebase\r\n            .auth()\r\n            .createUserWithEmailAndPassword(this.state.email,this.state.password)\r\n            .then(\r\n             res =>{\r\n                 console.log(res)\r\n                 // Update Profile\r\n                 res.user.updateProfile({\r\n                     displayName:this.state.username,\r\n                     photoURL: `http://gravatar.com/avatar/${md5(res.user.email)}?d=identicon`\r\n                 })\r\n                 .then(()=>{\r\n                    this.setState({loading:false});\r\n                    this.saveUser(res).then(()=>{\r\n                        console.log('user Saved');\r\n                    })\r\n                 })\r\n                 .catch(err=>{\r\n                     console.error(err);\r\n                     this.setState({errors:this.state.errors.concat(err) ,loading:false});\r\n                 } )\r\n             })\r\n             .catch(err=>{\r\n                 console.error(err);\r\n                 this.setState({errors:this.state.errors.concat(err) ,loading:false});\r\n             })\r\n        }\r\n    }\r\n    saveUser = res =>{\r\n        return this.state.usersRef.child(res.user.uid).set({\r\n            name: res.user.displayName,\r\n            avatar:res.user.photoURL\r\n        });\r\n    }\r\n  render() {\r\n      const {username,email,password,passwordConfirmation ,errors,loading} = this.state;\r\n    return (\r\n      <React.Fragment>\r\n        <Grid textAlign=\"center\" verticalAlign=\"middle\" className=\"register\">\r\n          <Grid.Column style={{maxWidth:450}}>\r\n           <Header as=\"h2\" icon color=\"orange\" textAlign=\"center\">\r\n            <Icon name=\"puzzle piece\" color=\"orange\"></Icon>\r\n            Register for Chat\r\n           </Header>\r\n           <Form size=\"large\" onSubmit={this.handleSubmit}>\r\n            <Segment stacked>\r\n              <Form.Input type=\"text\" value={username}\r\n              fluid name=\"username\" icon=\"user\" iconPosition=\"left\" placeholder=\"Username\" onChange={this.handleChange}></Form.Input>\r\n              <Form.Input type=\"email\" value={email} \r\n               className={this.handleInputError(errors,'email')}\r\n              fluid name=\"email\" icon=\"mail\" iconPosition=\"left\" placeholder=\"Email\" onChange={this.handleChange}></Form.Input>\r\n              <Form.Input type=\"password\" value={password} \r\n               className={this.handleInputError(errors,'password')}\r\n              fluid name=\"password\" icon=\"lock\" iconPosition=\"left\" placeholder=\"Password\" onChange={this.handleChange}></Form.Input>\r\n              <Form.Input type=\"password\" value={passwordConfirmation} \r\n              className={this.handleInputError(errors, 'password')}\r\n              fluid name=\"passwordConfirmation\" icon=\"repeat\" iconPosition=\"left\" placeholder=\"Password Confirmation\" onChange={this.handleChange}></Form.Input>\r\n              <Button disabled={loading} className={loading ? 'loading' :''} color=\"orange\" fluid size=\"large\">Submit</Button>\r\n            </Segment>\r\n           </Form>\r\n           {errors.length>0 && (\r\n               <Message error>\r\n               <h3>Error</h3>\r\n               {this.displayErrors(errors)}\r\n               </Message>\r\n           )}\r\n           <Message>Already a user? <Link to=\"/login\">Login</Link></Message>\r\n          </Grid.Column>\r\n        </Grid>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\nexport default Register","import React, { Component } from 'react'\r\nimport {Grid,Form,Segment,Button,Header,Message,Icon} from 'semantic-ui-react'\r\nimport {Link} from 'react-router-dom'\r\nimport firebase from '../../firebase'\r\n\r\n\r\nclass Login extends Component {\r\n     state={\r\n         email:'',\r\n         password:'',\r\n         errors:[],\r\n         loading:false,\r\n     }\r\n\r\n     handleChange=(e)=>{\r\n      this.setState({\r\n          [e.target.name] :e.target.value\r\n      }) \r\n    }\r\n  \r\n    displayErrors = errors => errors.map((error,i)=><p key={i}>{error.message}</p>);\r\n    handleInputError = (errors,inputName)=>{\r\n      return   errors.some(error=>error.message.toLowerCase().includes(inputName))? 'error':''\r\n    }\r\n    handleSubmit = (e)=>{\r\n        e.preventDefault();\r\n        if(this.isFormValid(this.state)){\r\n            this.setState({errors:[],loading:false});\r\n            firebase\r\n            .auth()\r\n            .signInWithEmailAndPassword(this.state.email,this.state.password)\r\n            .then(res=>{\r\n              console.log(res);\r\n\r\n            })\r\n            .catch(err=>{\r\n              console.error(err);\r\n              this.setState({\r\n                errors:this.state.errors.concat(err),\r\n                loading:false\r\n              })\r\n            })\r\n        }\r\n    }\r\n    // Validation\r\n    isFormValid = ({email,password})=> email && password;\r\n  render() {\r\n      const {email,password,errors,loading} = this.state;\r\n    return (\r\n      <React.Fragment>\r\n        <Grid textAlign=\"center\" verticalAlign=\"middle\" className=\"login\">\r\n          <Grid.Column style={{maxWidth:450}}>\r\n           <Header as=\"h2\" icon color=\"violet\" textAlign=\"center\">\r\n            <Icon name=\"code branch\" color=\"violet\"></Icon>\r\n            Login for Chat\r\n           </Header>\r\n           <Form size=\"large\" onSubmit={this.handleSubmit}>\r\n            <Segment stacked>\r\n              <Form.Input type=\"email\" value={email} \r\n               className={this.handleInputError(errors,'email')}\r\n              fluid name=\"email\" icon=\"mail\" iconPosition=\"left\" placeholder=\"Email\" onChange={this.handleChange}></Form.Input>\r\n              <Form.Input type=\"password\" value={password} \r\n               className={this.handleInputError(errors,'password')}\r\n              fluid name=\"password\" icon=\"lock\" iconPosition=\"left\" placeholder=\"Password\" onChange={this.handleChange}></Form.Input>\r\n              <Button disabled={loading} className={loading ? 'loading' :''} color=\"violet\" fluid size=\"large\">Submit</Button>\r\n            </Segment>\r\n           </Form>\r\n           {errors.length>0 && (\r\n               <Message error>\r\n               <h3>Error</h3>\r\n               {this.displayErrors(errors)}\r\n               </Message>\r\n           )}\r\n           <Message>Don't have an account? <Link to=\"/register\">Register</Link></Message>\r\n          </Grid.Column>\r\n        </Grid>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\nexport default Login","import React from 'react'\r\nimport {Loader,Dimmer} from 'semantic-ui-react';\r\n\r\nexport default function Spinner() {\r\n  return (\r\n    <Dimmer active>\r\n      <Loader size=\"huge\" content={\"Preparing Chat\"}/>\r\n    </Dimmer>\r\n  )\r\n}\r\n","import * as actionTypes from '../actions/types';\r\nimport {combineReducers} from 'redux'\r\n\r\nconst initialState={\r\n    currentUser:null,\r\n    isLoading:true\r\n};\r\nconst user_reducer = (state=initialState,action)=>{\r\n    switch(action.type){\r\n        case actionTypes.SET_USER:\r\n        return{\r\n            currentUser: action.payload.currentUser,  \r\n            isLoading:false\r\n        }\r\n        case actionTypes.CLEAR_USER:\r\n        return{\r\n            ...initialState,\r\n            isLoading:false\r\n        }\r\n        default:\r\n        return state;\r\n    }\r\n}\r\n\r\nconst rootReducer = combineReducers({\r\n    user:user_reducer\r\n});\r\n\r\nexport default  rootReducer;","export const SET_USER = 'SET_USER';\r\nexport const  CLEAR_USER = 'CLEAR_USER';","import {createStore} from 'redux';\r\nimport {composeWithDevTools} from 'redux-devtools-extension';\r\nimport rootReducer from './reducers';\r\nconst intialState ={}\r\nconst store = createStore(rootReducer,intialState ,composeWithDevTools());\r\n\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css';\nimport {BrowserRouter as Router,Route,Switch,withRouter} from 'react-router-dom';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport Register from './components/Auth/Register';\nimport Login from './components/Auth/Login';\nimport firebase from './firebase';\nimport Spinner from './Spinner';\n// Redux\nimport store from './store';\nimport {Provider,connect} from 'react-redux';\nimport {setUser,clearUser} from './actions';\nclass Root  extends React.Component{\n    componentDidMount(){\n        console.log(this.props.isLoading)\n        firebase.auth().onAuthStateChanged(user=>{\n            if(user){\n                this.props.setUser(user);\n                this.props.history.push('/');\n            }else{\n                this.props.history.push('/login');\n                this.props.clearUser();\n            }\n        })\n    }\n     render(){\n         \n        return this.props.isLoading ? <Spinner/> : (\n            <Switch>\n              <Route exact path=\"/\" component={App}></Route>\n              <Route path=\"/register\" component={Register}></Route>\n              <Route path=\"/login\" component={Login}></Route>\n            </Switch>\n        )\n     }\n}\nconst mapStateToProps = state=>({\n    isLoading:state.user.isLoading\n})\nconst RootWithAuth = withRouter(connect(mapStateToProps,{setUser,clearUser})(Root) );\nReactDOM.render(\n    <Provider store={store}>\n      <Router>\n        <RootWithAuth></RootWithAuth>\n      </Router>\n    </Provider>\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import * as actionTypes from './types';\r\n\r\nexport const  setUser = user=>{\r\n    return{\r\n        type:actionTypes.SET_USER,\r\n        payload:{\r\n            currentUser:user\r\n        }\r\n    }\r\n}\r\nexport const clearUser =() =>{\r\n return{\r\n     type:actionTypes.CLEAR_USER\r\n }\r\n}"],"sourceRoot":""}